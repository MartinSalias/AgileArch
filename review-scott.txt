We are currently working in a SAFE (Scaled Agile) environment, and I am the architect across 3 delivery teams that are responsible for producing a cloud version of our application. I have really struggled with what it actually means to be a software architect. At times it has meant "the guy who can fix the really hard problems" or "the guy who actually thinks things through a bit more than the others" or "the guy who encourages and mentors others to improve their own skills" or, "the guy who everyone is afraid to ask for a code review because he finds issues" and more often  recently, "the guy who spends more time in power point and Visio than in visual studio" (that last one I am very much unhappy about). so I look forward to reading more about your take on agile architecture.
I hope you don't mind, but I have compiled a list of edits that are just simple language issues in the book. So far I have only read chapter 1, if you like, I'll maintain a list as I go though.
I haven't had the money to come back to Buenos Aires since the last time I saw you (2011), but I am sure that at some stage I'm sure I will.
Hope family life is good for you, and that your business is prospering.
Cheers.
